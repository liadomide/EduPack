/**
 * TheVirtualBrain-Framework Package. This package holds all Data Management, and 
 * Web-UI helpful to run brain-simulations. To use it, you also need do download
 * TheVirtualBrain-Scientific Package (for simulators). See content of the
 * documentation-folder for more details. See also http://www.thevirtualbrain.org
 *
 * (c) 2012-2013, Baycrest Centre for Geriatric Care ("Baycrest")
 *
 * This program is free software; you can redistribute it and/or modify it under 
 * the terms of the GNU General Public License version 2 as published by the Free
 * Software Foundation. This program is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of 
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public
 * License for more details. You should have received a copy of the GNU General 
 * Public License along with this program; if not, you can download it here
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0
 *
 **/

/**
 * This file should contain CSS related to SVG drawings in TVB.
 * We recommend only the SVG CSS to go here, because this one will get exported with TVB SVG figures.
 */


.vt-pm-sign { font-size: small; stroke: #999; font-family: "Helvetica", "Arial", sans-serif;}
.vt-node-labels { font-size: small; font-family: "Helvetica", "Arial", sans-serif;}
.pca-text { font-size: small; font-family: "Helvetica", "Arial", sans-serif;}
#pca-viewer-id { padding-top: 40px; padding-left: 20px; }

.axis path,
.axis line { fill: none; stroke: black; shape-rendering: crispEdges; }
.line-plot { fill: none; stroke: blue; }

.brush { fill-opacity: 0.2; stroke: red }
.instructions { font-size: small; font-family: "Helvetica", "Arial", sans-serif; }
.matrix-text { font-size: medium; font-family: "Helvetica", "Arial", sans-serif;}
.node-labels { font-size: small; font-family: "Helvetica", "Arial", sans-serif; }

/* added while developing time series visualizer */
.tv-fig-bg { fill: #ddd }
.tv-data-bg { fill: white }
.tv-resizer { fill: #0af; fill-opacity: 0.1; }
.tv-ctx-line path { fill: none; stroke: black; stroke-width: 1px }
.tv-ctx-error path { fill: blue; fill-opacity:0.3; stroke: none; stroke-width: 1px }
/* used in the matrix plots to almost hide matrix elements
    not falling within a user selected range on colorbar */
.tv-colorbar-unselected { fill-opacity: 0.2 }


/* used to style numpy slices*/
.npy-slice { font-family: monospace; color: #002580; }

.slice-info { margin-top: 10px; }

/************** START -- TS from TSVolume Viewer ********/

.tsv-axis {
	shape-rendering: crispEdges;
}

.tsv-x.tsv-axis line {
    stroke: lightgrey;
}

.tsv-x.tsv-axis .minor {
	stroke-opacity: 0.5;
}

.tsv-x.tsv-axis path {
	display: none;
}

.tsv-y.tsv-axis line,
.tsv-y.tsv-axis path {
    fill: none;
    stroke: #000;
}

.tsv-svg-component {
    background-color: #d3d3d3;
}

.tsv-colored-line {
    fill: none;
    stroke-width: 1px;
    stroke-opacity: 0.3;
}

.tsv-colored-line.tsv-highlight {
    stroke-width: 2px;
    stroke-opacity: 1;
}

g.tsv-moving {
    opacity: 0.1;
}

.tsv-colored-line.mini {
    stroke-width: 1px;
    stroke-opacity: 1;
}

.tsv-text-highlight {
    fill: white;
    text-shadow: 2px 2px #1122aa;
}

.tsv-brush {
	background-color: white;
}

.tsv-brush .extent {
    stroke: #fff;
    fill-opacity: .5;
    shape-rendering: crispEdges;
}

.tsv-line {
    stroke: steelblue;
    stroke-width: 1;
    fill: none;
    clip-path: url(#clip);
}
/************** END -- TS from TSVolume Viewer ********/


/************** START -- Phase plane ********/

.dynamicChart {
    width: 100%;
    height: 99%;
    padding: 5px;
    box-sizing: border-box;
    background-color: #fafafd;
}

.dynamicChart .title{
    text-anchor: middle;
    font-size: 20px;
}

.phasePlane line{
    stroke: #88A;
    stroke-width: 1;
    /*marker-start: url(#markerCircle);*/
    marker-end: url("/burst/dynamic/#markerArrow");
}

.dynamicChart .overlay{
    fill:none;
    cursor: crosshair;
}

.dynamicChart .traj{
    fill: none;
    stroke-width: 2;
}

.dynamicChart #markerArrow{
    stroke: #88B;
}

.dynamicChart .axis line, .dynamicChart .axis path{
    shape-rendering: crispEdges;
    fill: none;
    stroke: black;
}

.dynamicChart .axisZero line, .dynamicChart .axisZero path {
    shape-rendering: auto;
    fill: none;
    stroke: #ddd;
}

.phaseLine line{
    stroke-width: 4;
    /*marker-start: url(#markerCircle);*/
    marker-end: url("/burst/dynamic/#markerArrow");
}

.dynamicChart .axislabel{
    font-size: 15px;
}

.dynamicChart .axis text{
}


/************** END -- Phase plane ********/